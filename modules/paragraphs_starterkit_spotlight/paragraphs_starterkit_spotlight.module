<?php

use Drupal\Core\Url;
use Drupal\Component\Utility\Html;
use Drupal\node\NodeInterface;
use Drupal\taxonomy\TermInterface;

/**
 * Implements hook_preprocess_node().
 */
function paragraphs_starterkit_spotlight_preprocess_node(&$variables) {

	/* @var $node NodeInterface */
  $node = $variables['elements']['#node'];
  if ($node->hasField('field_paragraphs')) {
    if (!$node->field_paragraphs->isEmpty() && $bundle = $node->field_paragraphs[0]->entity->bundle()) {
      if ($bundle == 'spotlight') {
        $variables['has_spotlight_title'] = TRUE;
      }
    }
  }
}

/**
 * Implements hook_preprocess_taxonomy_term().
 */
function paragraphs_starterkit_spotlight_preprocess_taxonomy_term(&$variables) {

	/* @var $term TermInterface */
  $term = $variables['elements']['#taxonomy_term'];
  if ($term->hasField('field_paragraphs')) {
    if (!$term->field_paragraphs->isEmpty() && $bundle = $term->field_paragraphs[0]->entity->bundle()) {
      if ($bundle == 'spotlight') {
        $variables['has_spotlight_title'] = TRUE;
      }
    }
  }
}

/**
 * Implements hook_preprocess_paragraphs().
 */
function paragraphs_starterkit_spotlight_preprocess_paragraph(&$variables) {
  $paragraph = $variables['elements']['#paragraph'];
  if ($paragraph->bundle() == 'spotlight') {
    $variables['has_headline'] = (bool) $paragraph->field_has_headline->value;
    $variables['has_socials'] = (bool) $paragraph->field_has_socials->value;
    $variables['text_position'] = $paragraph->field_text_position->value;

    if ($variables['has_socials']) {
      if ($node = \Drupal::routeMatch()->getParameter('node')) {
        _infinite_paragraphs_get_parent_base_data($node, $variables);
      }
      else if ($term = \Drupal::routeMatch()->getParameter('taxonomy_term')) {
        _infinite_paragraphs_get_parent_base_data($term, $variables);
      }
    }

    $anchor_links = [
      '#theme' => 'links',
      '#links' => [],
    ];

		$paragraphs = [];
    if (isset($paragraph->getParentEntity()->field_paragraphs)) {
      $paragraphs = $paragraph->getParentEntity()->field_paragraphs;
    }

    foreach ($paragraphs as $sibling) {
      if ($sibling->entity->id() == $paragraph->id()) {
        continue;
      }
      if (!$sibling->entity->field_anchor->isEmpty()) {
        $anchor_links['#links'][] = [
          'title' => $sibling->entity->field_anchor->value,
          'url' => Url::fromUserInput('#' . Html::getId($sibling->entity->field_anchor->value)),
        ];
      }
    }

    $variables['anchor_links'] = \Drupal::service('renderer')->render($anchor_links);
  }
}
